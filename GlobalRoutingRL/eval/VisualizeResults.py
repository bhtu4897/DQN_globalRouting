import numpy as np
import matplotlib.pyplot as plt


if __name__ == '__main__':


	# Get results  ('report.txt' is generated by eval2008.pl
	# with DRL results on odd line, A* results on even line)
	# Total OF on 0 column, Wire Length on 1 column
	result = np.loadtxt('report.txt',delimiter=',')
	# print(result.shape[0])

	DRL_data = np.empty((0,2)); Astar_data = np.empty((0,2))
	for i in range(int(result.shape[0])):
		resulti = [int(result[i,0]),int(result[i,1])]
		if i%2 == 0: # DRL result
			DRL_data = np.vstack((DRL_data,resulti))
		else:
			Astar_data = np.vstack((Astar_data,resulti))	

	# DRL result on 0 column, A* result on 1 column for wl and of data 
	of_data = np.hstack((DRL_data[:,0].reshape(-1,1),Astar_data[:,0].reshape(-1,1)))
	wl_data = np.hstack((DRL_data[:,1].reshape(-1,1),Astar_data[:,1].reshape(-1,1)))

	wl_data_list = wl_data.tolist(); of_data_list = of_data.tolist()

	# # Sort data w.r.t. DRL or A* result
	wl_data_list.sort(key=lambda x: x[0]); of_data_list.sort(key=lambda x: x[0])
	wl_data_arrayDRLsort = np.asarray(wl_data_list)
	of_data_arrayDRLsort = np.asarray(of_data_list)

	wl_data_list.sort(key=lambda x: x[1]); of_data_list.sort(key=lambda x: x[1])
	wl_data_arrayAstarsort = np.asarray(wl_data_list)
	of_data_arrayAstarsort = np.asarray(of_data_list)


	# # # Plot results 
	plt.figure()
	plt.title('Wirelength plots with sorted DRL solutions')
	plt.plot(wl_data_arrayDRLsort[:,0],'r',label='DRL solution')
	plt.plot(wl_data_arrayDRLsort[:,1],'b',label='A* solution')
	plt.legend(loc="upper right")
	# plt.show()
	plt.savefig('WLwithSortedDRL.png')
	plt.close()
	plt.figure()
	plt.title('Wirelength plots with sorted Astar solutions')
	plt.plot(wl_data_arrayAstarsort[:,0],'r',label='DRL solution')
	plt.plot(wl_data_arrayAstarsort[:,1],'b',label='A* solution')
	plt.legend(loc="upper right")
	# plt.show()
	plt.savefig('WLwithSortedAstar.png')
	plt.close()
	plt.figure()
	plt.title('Overflow plots with sorted DRL solutions')
	plt.plot(of_data_arrayDRLsort[:,0],'r',label='DRL solution')
	plt.plot(of_data_arrayDRLsort[:,1],'b',label='A* solution')
	plt.legend(loc="upper right")
	# plt.show()
	plt.savefig('OFwithSortedDRL.png')
	plt.close()
	plt.figure()
	plt.title('Overflow plots with sorted Astar solutions')
	plt.plot(of_data_arrayAstarsort[:,0],'r',label='DRL solution')
	plt.plot(of_data_arrayAstarsort[:,1],'b',label='A* solution')
	plt.legend(loc="upper right")
	# plt.show()
	plt.savefig('OFwithSortedAstar.png')
	plt.close()


	
	wl_diff = wl_data_arrayDRLsort[:,1]-wl_data_arrayDRLsort[:,0]
	DRL_win_rate = len(np.where(wl_diff>0)[0])/len(wl_diff)
	print('DRL_win_rate',DRL_win_rate)

	# Difference plots based on Astar sort
	plt.figure()
	plt.title('Decrease in Wirelength for DRL solutions')
	plt.plot(wl_data_arrayDRLsort[:,1]-wl_data_arrayDRLsort[:,0],'r')
	plt.savefig('DecreasdWL_DRLsol.png')
	plt.close()

	plt.figure()
	plt.title('Decrease in WL for DRL solutions')
	plt.hist(np.sort(wl_data_arrayDRLsort[:,1]-wl_data_arrayDRLsort[:,0]),bins=10,color='b',edgecolor='k')
	plt.xlabel('Decreased WL')
	plt.savefig('DecreasdWL_DRLsol_Hist.png')
	plt.close()

	plt.figure()
	plt.title('Decrease in Overflow for DRL solutions')
	plt.plot(of_data_arrayDRLsort[:,1]-of_data_arrayDRLsort[:,0],'r')
	plt.savefig('DecreasdOF_DRLsol.png')
	plt.close()

	plt.figure()
	plt.title('Decrease in OF for DRL solutions')
	plt.hist(np.sort(of_data_arrayDRLsort[:,1]-of_data_arrayDRLsort[:,0]),bins=10,color='b',edgecolor='k')
	plt.xlabel('Decreased OF')
	plt.savefig('DecreasdOF_DRLsol_Hist.png')
	plt.close()















